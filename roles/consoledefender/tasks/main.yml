---
- name: Create Twistlock tools directory
  file:
    path: "{{ work_dir }}/tools"
    state: directory
    mode: 0700
  register: tools_dir

- name: Extract twistcli-linux.zip to tools directory
  unarchive:
    src: "{{ toolBundleUrl if toolBundleUrl is defined else 'https://storage.googleapis.com/twistlock-cdn/isolated_upgrades/v' + version + '/v' + version + '_isolated_update.tar.gz' }}"
    dest: "{{ tools_dir.path }}"
    remote_src: true
    creates: "{{ tools_dir.path }}/linux/twistcli"

- name: Create Console script
  template:
    src: console.sh.j2
    dest: "{{ tools_dir.path }}/console.sh"
    mode: 0755
  register: console_sh

- name: Create Console YAML file
  command: "{{ tools_dir.path }}/console.sh"
  args:
    chdir: "{{ tools_dir.path }}"
  when: console_sh.changed == true
  register: console_yaml

- name: Create Console from YAML file
  kubernetes.core.k8s:
    src: "{{ work_dir }}/twistlock_console.yaml"
  when: console_yaml.changed == true

- name: Wait for Console to start up
  uri:
    url: https://twistlock-console.{{ namespace }}:8083/api/v1/_ping
    validate_certs: false
    method: GET
  register: result
  until: result.status == 200
  retries: 60
  delay: 5

- name: Create first admin user
  uri:
    url: https://twistlock-console.{{ namespace }}:8083/api/v1/signup
    validate_certs: false
    method: POST
    body_format: json
    body: {
      "username": "{{ username }}",
      "password": "{{ password }}"
    }
    status_code: [200, 400]

- name: Add license to Console
  uri:
    url: https://twistlock-console.{{ namespace }}:8083/api/v1/settings/license
    validate_certs: false
    url_username: "{{ username }}"
    url_password: "{{ password }}"
    force_basic_auth: true
    method: POST
    body_format: json
    body: {
      "key": "{{ license }}"
    }

- name: Create Defender script
  template:
    src: defender.sh.j2
    dest: "{{ tools_dir.path }}/defender.sh"
    mode: 0755
  register: defender_sh

- name: Create Defender YAML file
  command:
    cmd: "{{ tools_dir.path }}/defender.sh"
    chdir: "{{ tools_dir.path }}"
    stdin: "{{ password }}"
  when: defender_sh.changed == true
  register: defender_yaml

- name: Add toleration to YAML file
  lineinfile:
    path: "{{ work_dir }}/twistlock_defender.yaml"
    insertbefore:  ^\s+containers:$
    line: |2-
            tolerations:
            - key: {{ defenderConfig.tolerationKey }}
              operator: "Exists"
              effect: {{ defenderConfig.tolerationEffect }}
  when: defenderConfig.toleration | bool


- name: Create Defender from YAML file
  kubernetes.core.k8s:
    src: "{{ work_dir }}/twistlock_defender.yaml"
  when: defender_yaml.changed == true
